<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MattEland.Shared</name>
    </assembly>
    <members>
        <member name="T:MattEland.Shared.Collections.CollectionExtensions">
            <summary>
            Helper extension methods for working with collections or ranges.
            </summary>
        </member>
        <member name="M:MattEland.Shared.Collections.CollectionExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an operation on each member of the collection and returns the source collection
            </summary>
            <typeparam name="T">The type contained in the collection</typeparam>
            <param name="source">The collection</param>
            <param name="operation">The operation to perform on each member of the collection</param>
            <returns>The <paramref name="source"/> collection.</returns>
        </member>
        <member name="M:MattEland.Shared.Collections.CollectionExtensions.Each(System.Int32,System.Action{System.Int32})">
            <summary>
            Performs an operation with each number from 0 to <paramref name="times"/>.
            </summary>
            <param name="times">The amount of times the operation should be invoked</param>
            <param name="operation">The operation to perform</param>
        </member>
        <member name="T:MattEland.Shared.Strings.IndentingStringBuilder">
            <summary>
            A StringBuilder wrapper that allows for indenting and outdenting code
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.#ctor">
            <summary>
            Creates a new instance of the IndentingStringBuilder, using a new underlying StringBuilder
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.#ctor(System.String)">
            <summary>
            Creates a new instance of the IndentingStringBuilder, using a new underlying StringBuilder that starts
            with the specified <paramref name="value"/>.
            </summary>
            <param name="value">The string to start with in the string builder</param>
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.#ctor(System.Text.StringBuilder)">
            <summary>
            Creates a new instance of the IndentingStringBuilder, using an existing StringBuilder.
            </summary>
            <param name="source">The existing <see cref="T:System.Text.StringBuilder"/> to wrap around</param>
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.ToString">
            <inheritdoc />
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.Indent">
            <inheritdoc />
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.Outdent">
            <inheritdoc />
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.AppendLine">
            <inheritdoc />
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.AppendLine(System.String)">
            <inheritdoc />
        </member>
        <member name="M:MattEland.Shared.Strings.IndentingStringBuilder.IndentScope">
            <inheritdoc />
        </member>
        <member name="T:MattEland.Shared.Strings.IndentScopeHelper">
            <summary>
            A simple <see cref="T:System.IDisposable"/> that will invoke Indent and Outdent on a <see cref="T:MattEland.Shared.Strings.IStringBuilder"/> on scope entered and exited.
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IndentScopeHelper.#ctor(MattEland.Shared.Strings.IStringBuilder)">
            <summary>
            Creates a new scope and indents the <paramref name="stringBuilder"/>
            </summary>
            <param name="stringBuilder">The source <see cref="T:MattEland.Shared.Strings.IStringBuilder"/></param>
        </member>
        <member name="M:MattEland.Shared.Strings.IndentScopeHelper.Dispose">
            <summary>
            Disposes the object and outdents the StringBuilder
            </summary>
        </member>
        <member name="T:MattEland.Shared.Strings.IStringBuilder">
            <summary>
            An interface for a string builder wrapper.
            </summary>
            <remarks>
            This is a bit cleaner than passing IndentingStringBuilder around everywhere, but I still don't love it.
            </remarks>
        </member>
        <member name="M:MattEland.Shared.Strings.IStringBuilder.Indent">
            <summary>
            Indents the display, causing future lines to be indented.
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IStringBuilder.Outdent">
            <summary>
            Outdents the display, causing future lines to be less indented.
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IStringBuilder.AppendLine">
            <summary>
            Appends an empty line.
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IStringBuilder.AppendLine(System.String)">
            <summary>
            Appends a line to the display, respecting the current indentation level
            </summary>
        </member>
        <member name="M:MattEland.Shared.Strings.IStringBuilder.IndentScope">
            <summary>
            Creates an IDisposable scope that will invoke Indent on enter and Outdent on dispose.
            </summary>
            <returns>An IDisposable indentation scope, intended to be stored in a using Statement</returns>
        </member>
    </members>
</doc>
